{"version":3,"sources":["index.js"],"names":["CreateTextSplit","element","className","activeClass","el","classList","add","remove","arr","stagger","map","innerHTML","querySelectorAll","forEach","child","index","itemStagger","style","cssText","letters","innerText","split","handleSplit","console","error","words","newWordsArr","word","push"],"mappings":";AA0EK,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,qBAAA,EA1EQA,IAAAA,EAAAA,WACK,SAAA,IAAA,EAAA,KAAA,GACLC,KAAAA,QACAC,KAAAA,UACAC,KAAAA,YAsER,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SAnEsC,MAAA,SAAA,GAA9BC,IAAAA,EAAAA,EAAAA,GAAID,EAAAA,EAAAA,YAAAA,OAAc,IAAA,EAAA,SAAY,EAC9BF,KAAAA,QAAUG,EACVD,KAAAA,YAAcA,IAiEtB,CAAA,IAAA,mBA9DkB,MAAA,WACVF,KAAAA,QAAQI,UAAUC,IAAI,KAAKH,eA6DnC,CAAA,IAAA,oBA1DmB,MAAA,WACXF,KAAAA,QAAQI,UAAUE,OAAO,KAAKJ,eAyDtC,CAAA,IAAA,cAtDWK,MAAAA,SAAAA,EAAKN,EAAWO,GAAS,IAAA,EAAA,KACjCD,EAAIE,IAAI,SAACN,GACM,MAAPA,IACAA,EAAK,UAET,EAAKH,QAAQU,WAA4BT,eAAAA,OAAAA,EAAaE,KAAAA,OAAAA,EAAtD,aAIa,KAAKH,QAAQW,iBAAqBV,IAAAA,OAAAA,IAE1CW,QAAQ,SAACC,EAAOC,GACjBC,IAAAA,EAAcP,EAAUM,EAE5BD,EAAMG,MAAMC,QACgBF,2CAAAA,OAAAA,EACDA,6CAAAA,OAAAA,EAF3B,wEAwCP,CAAA,IAAA,gBAhCqC,MAAA,SAAA,GAAtBP,IAAAA,EAAAA,EAAAA,QAASP,EAAAA,EAAAA,UACjB,GAAA,KAAKD,QAAS,CACRkB,IAAAA,EAAU,KAAKlB,QAAQmB,UAAUC,MAAM,IAExCpB,KAAAA,QAAQU,UAAY,GAEpBW,KAAAA,YAAYH,EAASjB,EAAWO,QAGrCc,QAAQC,MAAM,uDAuBrB,CAAA,IAAA,cAnBmC,MAAA,SAAA,GAAtBf,IAAAA,EAAAA,EAAAA,QAASP,EAAAA,EAAAA,UACf,GAAA,KAAKD,QAAS,CACRwB,IAAAA,EAAQ,KAAKxB,QAAQmB,UAAUC,MAAM,KAEtCpB,KAAAA,QAAQU,UAAY,GAGrBe,IAAAA,EAAc,GAElBD,EAAMf,IAAI,SAAAiB,GACND,EAAYE,KAAKD,GACjBD,EAAYE,KAAK,YAGhBN,KAAAA,YAAYI,EAAaxB,EAAWO,QAGzCc,QAAQC,MAAM,yDAErB,EA1EQxB,GA0ER,QAAA,gBAAA","file":"index.js","sourceRoot":"../../src","sourcesContent":["export class CreateTextSplit {\n    constructor() {\n        this.element;\n        this.className;\n        this.activeClass;\n    }\n\n    config({ el, activeClass = 'active' }) {\n        this.element = el;\n        this.activeClass = activeClass;\n    }\n\n    applyActiveClass() {\n        this.element.classList.add(this.activeClass);\n    }\n\n    removeActiveClass() {\n        this.element.classList.remove(this.activeClass);\n    }\n\n    handleSplit(arr, className, stagger) {\n        arr.map((el) => {\n            if (el === ' ') {\n                el = '&nbsp;'\n            }\n            this.element.innerHTML += `<span class=${className}>${el}</span>`\n        })\n\n        // Add the delays to the children of the arr\n        const children = this.element.querySelectorAll(`.${className}`);\n\n        children.forEach((child, index) => {\n            let itemStagger = stagger * index;\n\n            child.style.cssText = `\n                    transition-delay: ${itemStagger}s;\n                    animation-delay: ${itemStagger}s;\n                    display: inline-block;\n                `\n        })\n    }\n\n    splitByLetter({ stagger, className }) {\n        if (this.element) {\n            const letters = this.element.innerText.split('');\n            // Clear the element\n            this.element.innerHTML = ''\n\n            this.handleSplit(letters, className, stagger)\n\n        } else {\n            console.error('NO ELEMENT FOUND: Add one using the config method')\n        }\n    }\n\n    splitByWord({ stagger, className }) {\n        if (this.element) {\n            const words = this.element.innerText.split(' ');\n            // Clear the element\n            this.element.innerHTML = ''\n\n            // Handle the spaces between the words by add nbsp;\n            let newWordsArr = [];\n\n            words.map(word => {\n                newWordsArr.push(word);\n                newWordsArr.push('&nbsp;')\n            })\n\n            this.handleSplit(newWordsArr, className, stagger)\n\n        } else {\n            console.error('NO ELEMENT FOUND: Add one using the config method')\n        }\n    }\n}\n"]}